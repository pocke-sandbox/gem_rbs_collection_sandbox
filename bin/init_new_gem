#!/usr/bin/env ruby

require 'pathname'

def help
  puts <<~HELP
    Generate a boilerplate for a new gem RBS.

    Usage: bin/init_new_gem GEM_NAME
  HELP
end

def normalize_github_url(str)
  case str
  when /\A\s*\z/
    nil
  when %r!\A[^/]+/[^/]+\z!
    "https://github.com/#{str}.git"
  when /\.git\z/
    str
  else
    "#{str}.git"
  end
end

def put(path, content)
  puts "create #{path}"
  path.dirname.mkpath unless path.dirname.directory?
  path.write(content)
end

def update(path, &block)
  puts "update #{path}"
  new_content = yield path.read
  path.write(new_content)
end

def sh!(*cmd)
  puts "execute #{cmd.join(' ')}"
  system(*cmd, exception: true)
end

if ARGV.size != 1 || %w[--help -h help].include?(ARGV[0])
  help
  exit 1
end

gem_name = ARGV[0]

begin
  puts "Gem version you want to add (MAJOR.MINOR is recommended. e.g. 4.2):"
  print '> '
end while (version = $stdin.gets.chomp).empty?

puts "GitHub Repository as USER/REPO (default: skip adding git submodule)"
print '> '
git_repo = normalize_github_url($stdin.gets.chomp)

puts "Your GitHub account if you want to become the maintainer of RBS for this gem (default: skip adding you to the maintainer)"
puts "We recommentd to add your account to maintain the RBS actively."
puts "See https://github.com/ruby/gem_rbs_collection/blob/main/docs/CONTRIBUTING.md#gem-reviewer"
print '> '
github_account = $stdin.gets.chomp.tap { break if _1.empty? }

base = Pathname("gems/#{gem_name}/#{version}")

put base / "#{gem_name}.rbs", <<~RBS
  # Write the type definition here!
RBS
put base / "_test/test.rb", <<~RUBY
  # Write Ruby code to test the RBS.
  # It is type checked by `steep check` command.

  require "#{gem_name}"
RUBY
put base / "_test/metadata.yaml", <<~YAML
  # If the test needs gem's RBS files, declare them here.
  #
  # additional_gems:
  #   - GEM_NAME
YAML
put base / 'manifest.yaml', <<~'YAML'
  # manifest.yaml describes dependencies which do not appear in the gemspec.
  # If this gem includes such dependencies, comment-out the following lines and
  # declare the dependencies.
  # If all dependencies appear in the gemspec, you should remove this file.
  #
  # dependencies:
  #   - name: pathname
YAML

if git_repo
  src_path = base.join('_src')
  sh! 'git', 'submodule', 'add', '-f', '--name', src_path.to_s, git_repo, src_path.to_s
end

if github_account
  github_account = github_account.sub('@', '')
  put base.parent / '_reviewers.yaml', <<~YAML
    reviewers:
      - #{github_account}
  YAML
end

puts
puts <<~MESSAGE
  The boilerplate for #{gem_name} gem has been generated.
  Start writing the RBS! We recommend to focus on the main API of #{gem_name}.
  See the CONTRIBUTING.md for more information.
MESSAGE
